# Generated by Django 5.0.3 on 2024-03-27 14:19

import django.db.models.deletion
import utils.coder
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('content', models.TextField()),
                ('pub_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.ImageField(upload_to=utils.coder.encode_upload_file)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SmallIntegerField(unique=True)),
                ('location', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('send_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stagename', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('joined_time', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avatar_artists', to='music.image')),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='background_artists', to='music.image')),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('count', models.IntegerField(db_default=0, default=0)),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('description', models.TextField()),
                ('pub_company', models.CharField(blank=True, max_length=50, null=True)),
                ('pub_date', models.DateField(auto_now_add=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='albums', to='music.artist')),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='background_albums', to='music.image')),
            ],
        ),
        migrations.CreateModel(
            name='PlayList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('count', models.IntegerField(db_default=0, default=0)),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('description', models.TextField()),
                ('pub_date', models.DateField(auto_now_add=True)),
                ('img', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to='music.image')),
            ],
        ),
        migrations.CreateModel(
            name='PlayComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('pub_time', models.DateTimeField(auto_now_add=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='music.playlist')),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('count', models.IntegerField(default=0)),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('data', models.FileField(upload_to=utils.coder.encode_upload_file)),
                ('lyrics', models.TextField(blank=True, null=True)),
                ('pub_date', models.DateField(auto_now_add=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='music.album')),
                ('create_artists', models.ManyToManyField(related_name='created_songs', to='music.artist')),
                ('img', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='music.image')),
            ],
        ),
        migrations.AddField(
            model_name='playlist',
            name='join_songs',
            field=models.ManyToManyField(related_name='joined_playlists', to='music.song'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.BooleanField(choices=[(0, '男'), (1, '女'), (None, '未知')], db_default=None, default=None)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('nickname', models.CharField(max_length=50)),
                ('cellphone', models.CharField(blank=True, max_length=20, null=True)),
                ('qq', models.CharField(blank=True, max_length=20, null=True)),
                ('github', models.URLField(blank=True, null=True)),
                ('experience', models.IntegerField(db_default=0, default=0)),
                ('avatar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.image')),
                ('fans', models.ManyToManyField(related_name='concerns', to='music.user')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.location')),
                ('msg_users', models.ManyToManyField(related_name='msged_users', through='music.Message', to='music.user')),
                ('origin_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SongComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('pub_time', models.DateTimeField(auto_now_add=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='music.song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_comments', to='music.user')),
            ],
        ),
        migrations.AddField(
            model_name='song',
            name='comment_users',
            field=models.ManyToManyField(related_name='commented_songs', through='music.SongComment', to='music.user'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='collect_users',
            field=models.ManyToManyField(related_name='collected_playlists', to='music.user'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='comment_users',
            field=models.ManyToManyField(related_name='commented_playlists', through='music.PlayComment', to='music.user'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to='music.user'),
        ),
        migrations.AddField(
            model_name='playcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='play_comments', to='music.user'),
        ),
        migrations.AddField(
            model_name='message',
            name='receive_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='music.user'),
        ),
        migrations.AddField(
            model_name='message',
            name='send_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sended_messages', to='music.user'),
        ),
        migrations.CreateModel(
            name='EventComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('pub_time', models.DateTimeField(auto_now_add=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='music.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_comments', to='music.user')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='comment_users',
            field=models.ManyToManyField(related_name='commented_events', through='music.EventComment', to='music.user'),
        ),
        migrations.AddField(
            model_name='event',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='music.user'),
        ),
        migrations.AddField(
            model_name='artist',
            name='account',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='music.user'),
        ),
        migrations.CreateModel(
            name='AlbumComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('pub_time', models.DateTimeField(auto_now_add=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='music.album')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='album_comments', to='music.user')),
            ],
        ),
        migrations.AddField(
            model_name='album',
            name='collected_users',
            field=models.ManyToManyField(related_name='collected_albums', to='music.user'),
        ),
        migrations.AddField(
            model_name='album',
            name='commented_users',
            field=models.ManyToManyField(related_name='commented_albums', through='music.AlbumComment', to='music.user'),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('count', models.IntegerField(db_default=0, default=0)),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('data', models.FileField(upload_to=utils.coder.encode_upload_file)),
                ('pub_date', models.DateField(auto_now_add=True)),
                ('collect_users', models.ManyToManyField(related_name='collected_videos', to='music.user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='music.user')),
            ],
        ),
        migrations.CreateModel(
            name='VideoComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('shared_count', models.IntegerField(db_default=0, default=0)),
                ('liked_count', models.IntegerField(db_default=0, default=0)),
                ('pub_time', models.DateTimeField(auto_now_add=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='music.video')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_comments', to='music.user')),
            ],
        ),
        migrations.AddField(
            model_name='video',
            name='comment_users',
            field=models.ManyToManyField(related_name='commented_videos', through='music.VideoComment', to='music.user'),
        ),
        migrations.CreateModel(
            name='VideoTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10)),
                ('tag_videos', models.ManyToManyField(related_name='seted_tags', to='music.video')),
            ],
        ),
        migrations.CreateModel(
            name='AlbumTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10)),
                ('subtag', models.CharField(max_length=10)),
                ('tag_albums', models.ManyToManyField(related_name='seted_tags', to='music.album')),
            ],
            options={
                'unique_together': {('tag', 'subtag')},
            },
        ),
        migrations.CreateModel(
            name='ArtistTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10)),
                ('subtag', models.CharField(max_length=10)),
                ('tag_artists', models.ManyToManyField(related_name='seted_tags', to='music.artist')),
            ],
            options={
                'unique_together': {('tag', 'subtag')},
            },
        ),
        migrations.CreateModel(
            name='PlayTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10)),
                ('subtag', models.CharField(max_length=10)),
                ('tag_songlists', models.ManyToManyField(related_name='seted_tags', to='music.playlist')),
            ],
            options={
                'unique_together': {('tag', 'subtag')},
            },
        ),
        migrations.CreateModel(
            name='SongTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10)),
                ('subtag', models.CharField(max_length=10)),
                ('tag_songs', models.ManyToManyField(related_name='seted_tags', to='music.song')),
            ],
            options={
                'unique_together': {('tag', 'subtag')},
            },
        ),
        migrations.CreateModel(
            name='SongRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(db_default=1, default=1)),
                ('last_time', models.DateTimeField(auto_now=True)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recorded_songs', to='music.song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='played_songs', to='music.user')),
            ],
            options={
                'unique_together': {('song', 'user')},
            },
        ),
        migrations.CreateModel(
            name='VideoRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(db_default=1, default=1)),
                ('last_time', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='played_videos', to='music.user')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recorded_videos', to='music.video')),
            ],
            options={
                'unique_together': {('video', 'user')},
            },
        ),
    ]
